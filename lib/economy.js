const { getUser, updateBalance, setLastWork, canWork, upgradeWorkLevel } = require("./database")
const { WORK_COOLDOWN } = require("../config")

// Configuraci√≥n de trabajos de Ravehub
const jobs = {
  dj: {
    name: "DJ",
    minPay: 150,
    maxPay: 400,
    description: "Mezclas m√∫sica electr√≥nica en eventos y fiestas",
    messages: [
      "¬°Tu set de techno ha sido incre√≠ble! La pista no dejaba de vibrar con tus beats.",
      "Has mezclado house y trance perfectamente. El promotor te ha dado una propina extra.",
      "Tu sesi√≥n de m√∫sica electr√≥nica ha sido un √©xito. Tu nombre suena fuerte en Ravehub.",
      "Has cerrado la noche con un set √©pico. Los ravers no paraban de bailar.",
      "Tu mezcla de bass y dubstep ha roto la pista. ¬°Eres una leyenda!",
    ],
  },
  security: {
    name: "Seguridad",
    minPay: 100,
    maxPay: 250,
    description: "Mantienes el orden en los eventos de m√∫sica electr√≥nica",
    messages: [
      "Has mantenido la seguridad en la zona VIP durante todo el festival.",
      "Evitaste problemas en la entrada principal. El evento transcurri√≥ sin incidentes.",
      "Tu presencia ha mantenido el orden en el √°rea de DJ booth.",
      "Has controlado perfectamente el acceso backstage durante el evento.",
      "Gracias a ti, todos pudieron disfrutar de la m√∫sica sin problemas.",
    ],
  },
  promoter: {
    name: "Promotor",
    minPay: 200,
    maxPay: 500,
    description: "Promocionas fiestas y eventos de m√∫sica electr√≥nica",
    messages: [
      "¬°Tu evento de m√∫sica electr√≥nica fue sold out! Incre√≠ble promoci√≥n.",
      "Has conseguido traer a un DJ internacional famoso. El evento fue √©pico.",
      "Tu campa√±a en redes sociales atrajo a miles de ravers nuevos.",
      "El festival que promocionaste bati√≥ r√©cords de asistencia.",
      "Tu red de contactos ha hecho posible el mejor lineup del a√±o.",
    ],
  },
  dealer: {
    name: "Dealer",
    minPay: 250,
    maxPay: 600,
    description: "Vendes productos especiales en el mercado underground",
    messages: [
      "Has vendido toda tu mercanc√≠a premium en tiempo r√©cord.",
      "Un cliente VIP te pag√≥ extra por tu discreci√≥n y calidad.",
      "Tu reputaci√≥n en el underground sigue creciendo.",
      "Has expandido tu red de contactos en la escena electr√≥nica.",
      "Tus productos son los m√°s buscados en los afterparties.",
    ],
  },
}

const work = async (jid, jobType) => {
  if (!jobs[jobType]) {
    return {
      success: false,
      message:
        "‚ùå Ese trabajo no existe en Ravehub.\n\n*Trabajos disponibles:*\n‚Ä¢ !work dj\n‚Ä¢ !work security\n‚Ä¢ !work promoter\n‚Ä¢ !work dealer",
    }
  }

  const canUserWork = await canWork(jid, WORK_COOLDOWN)
  if (!canUserWork) {
    const user = await getUser(jid)
    const timeLeft = WORK_COOLDOWN - (new Date() - user.lastWork)
    const minutesLeft = Math.ceil(timeLeft / 60000)

    return {
      success: false,
      message: `‚è≥ Debes esperar ${minutesLeft} minutos antes de volver a trabajar en Ravehub.`,
    }
  }

  const job = jobs[jobType]
  const user = await getUser(jid)
  const levelMultiplier = 1 + (user.workLevel - 1) * 0.15

  const basePay = Math.floor(Math.random() * (job.maxPay - job.minPay + 1)) + job.minPay
  const finalPay = Math.floor(basePay * levelMultiplier)

  await updateBalance(jid, finalPay)
  await setLastWork(jid, jobType)

  const message = job.messages[Math.floor(Math.random() * job.messages.length)]

  let levelUpMessage = ""
  if (Math.random() < 0.1) {
    await upgradeWorkLevel(jid)
    levelUpMessage = "\n\nüåü ¬°Has subido de nivel en este trabajo! Ahora ganar√°s m√°s dinero."
  }

  return {
    success: true,
    message: `üíº *${job.name} - Ravehub*\n\n${message}\n\nüí∞ Has ganado ${finalPay} monedas Ravehub.${levelUpMessage}`,
  }
}

const getBalance = async (jid) => {
  const user = await getUser(jid)
  return {
    balance: user.balance,
    workLevel: user.workLevel,
    workType: user.workType,
    totalWorked: user.totalWorked,
  }
}

module.exports = {
  work,
  getBalance,
  jobs,
}
